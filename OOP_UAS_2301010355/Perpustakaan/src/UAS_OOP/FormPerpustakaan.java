package UAS_OOP;

import static UAS_OOP.dbkoneksi.koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maria Droste D. Jehalu
 * TGL: 28 JUNI 2025
 */
public class FormPerpustakaan extends javax.swing.JFrame {
    DefaultTableModel DTM = new DefaultTableModel();

    /**
     * Creates new form FormPerpustakaan
     */
    public FormPerpustakaan() throws SQLException {
        initComponents();
        
        fieldAktif(false);
        tblPerpus.setModel(DTM);
        DTM.addColumn("Id Buku");
        DTM.addColumn("Judul Buku");
        DTM.addColumn("Penulis");
        DTM.addColumn("Genre");
        DTM.addColumn("Tahun Terbit");
        DTM.addColumn("Status Baca");
        
          String[] opsiSTATUS = {"Pilih Status Baca", "Belum", "Sedang Dibaca", "Sudah"};
          cbSTATUS.removeAllItems();
          for (int i = 0; i < opsiSTATUS.length; i++) {
          cbSTATUS.addItem(opsiSTATUS[i]);
          }
          
          lsdtmhs();
          clearform();
          tombol (false);
          bBaru.setEnabled(true);
          bTutup.setEnabled(true);
          fieldAktif(false);
          cbSTATUS.setVisible(true);
          
          
         
    }
    private void tombol (boolean opsi){
        bBaru.setEnabled(opsi);
        bEdit.setEnabled(opsi);
        bHapus.setEnabled(opsi);
        bTutup.setEnabled(opsi);
      
    }
    private void fieldAktif(boolean opsi){
        txtID.setEditable(opsi);
        txtJUDUL.setEditable(opsi);
        txtPENULIS.setEditable(opsi);
        txtGENRE.setEditable(opsi);
        txtTAHUN.setEditable(opsi);
        txtSTATUS.setEditable(opsi);
        
        txtGENRE.setVisible(true);
        txtSTATUS.setVisible(false);

        cbSTATUS.setEnabled(opsi);
        cbSTATUS.setVisible(true);  
    }
    

    
        
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerpus = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtJUDUL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPENULIS = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGENRE = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTAHUN = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSTATUS = new javax.swing.JTextField();
        cbSTATUS = new javax.swing.JComboBox<>();
        bBaru = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bTutup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPerpus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tblPerpus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPerpusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPerpus);

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("PERPUSTAKAAN PRIBADI");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("ID BUKU");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setText("JUDUL");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 204));
        jLabel4.setText("PENULIS");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 204));
        jLabel5.setText("GENRE");

        txtGENRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGENREActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 204));
        jLabel6.setText("TAHUN TERBIT");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("STATUS BACA");

        cbSTATUS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bBaru.setText("Baru");
        bBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBaruActionPerformed(evt);
            }
        });

        bEdit.setText("Edit");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bTutup.setText("Tutup");
        bTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTutupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtJUDUL, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPENULIS, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                                    .addComponent(txtGENRE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTAHUN, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSTATUS, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbSTATUS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(bBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bTutup, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(288, 288, 288))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtJUDUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPENULIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtGENRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTAHUN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtSTATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSTATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bBaru)
                            .addComponent(bEdit)
                            .addComponent(bHapus)
                            .addComponent(bTutup))))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGENREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGENREActionPerformed
        
    }//GEN-LAST:event_txtGENREActionPerformed

    private void bBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBaruActionPerformed
       if(bBaru.getText().equals("Baru")){
           
             clearform();
             fieldAktif(true);
             
             txtSTATUS.setVisible(false);
             cbSTATUS.setVisible(true);
             
             bBaru.setText("Simpan");
             bTutup.setText("Batal");
             bEdit.setEnabled(false);
             bHapus.setEnabled(false);
        }else{
            try {
                storeData();
                lsdtmhs();
            } catch (SQLException ex) {
              Logger.getLogger(FormPerpustakaan.class.getName()).log(Level.SEVERE, null, ex);
            }
              bBaru.setText("Baru");
              bTutup.setText("Tutup");
              clearform();
              fieldAktif(false);
               
              txtSTATUS.setVisible(true);
              cbSTATUS.setVisible(false);
       }
              
    }//GEN-LAST:event_bBaruActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        if(bEdit.getText().equals("Edit")){
     
           bEdit.setText("Simpan");
           bTutup.setText("Batal");
           
           bBaru.setEnabled(false);
           bHapus.setEnabled(false);
           fieldAktif(true);
           txtID.setEditable(false);
           txtSTATUS.setVisible(false);
           cbSTATUS.setVisible(true);
           cbSTATUS.setSelectedItem(txtSTATUS.getText());
        }else{
                try{
                    updateData();
                     lsdtmhs();
                } catch (SQLException ex) {
                    Logger.getLogger(FormPerpustakaan.class.getName()).log(Level.SEVERE, null, ex);
                }
               
                bEdit.setText("Edit");
                bTutup.setText("Tutup");
                
                bBaru.setEnabled(true);
                bEdit.setEnabled(false);
                
                txtSTATUS.setVisible(true);
                cbSTATUS.setVisible(false);
                fieldAktif(false);
                clearform();
        }  

    }//GEN-LAST:event_bEditActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
       int opsi = JOptionPane.showOptionDialog(this,
                   "Yakin akan menghapus data?" +txtID.getText() + " ?", 
                   "Konfirmasi Hapus Data", 
                   JOptionPane.YES_NO_OPTION, 
                   JOptionPane.QUESTION_MESSAGE, 
                   null, null, null);
            if (opsi==JOptionPane.YES_OPTION){
            try{
               destroyData();
               lsdtmhs();
               clearform();
               bHapus.setEnabled(false);
               bEdit.setEnabled(false);
               
                } catch (SQLException ex) {
                  Logger.getLogger(FormPerpustakaan.class.getName()).log(Level.SEVERE, null, ex);
           }  
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTutupActionPerformed
       if (bTutup.getText().equals("Tutup")){
           int opsi = JOptionPane.showOptionDialog(this,
                   "Yakin akan menutup aplikasi?", "Konfirmasi Tutup aplikasi", 
                   JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (opsi==JOptionPane.YES_OPTION){
             System.exit(0);
            }
             
        }else{
            bTutup.setText("Tutup");
            bBaru.setText("Baru");
            bEdit.setText("Edit");
            bBaru.setEnabled(true);
            bEdit.setEnabled(false);
            cbSTATUS.setVisible(false);
            txtSTATUS.setVisible(true);
            fieldAktif(false);
            clearform();
        }
    }//GEN-LAST:event_bTutupActionPerformed

    private void tblPerpusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPerpusMouseClicked
        txtID.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 0).toString() );
        txtJUDUL.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 1).toString() );
        txtPENULIS.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 2).toString() );
        txtGENRE.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 3).toString() );
        txtTAHUN.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 4).toString() );
        txtSTATUS.setText(tblPerpus.getValueAt(tblPerpus.getSelectedRow(), 5).toString() );
        
        bEdit.setEnabled(true);
        bHapus.setEnabled(true);
    }//GEN-LAST:event_tblPerpusMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPerpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPerpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPerpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPerpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormPerpustakaan().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FormPerpustakaan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBaru;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bTutup;
    private javax.swing.JComboBox<String> cbSTATUS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPerpus;
    private javax.swing.JTextField txtGENRE;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJUDUL;
    private javax.swing.JTextField txtPENULIS;
    private javax.swing.JTextField txtSTATUS;
    private javax.swing.JTextField txtTAHUN;
    // End of variables declaration//GEN-END:variables

    private void lsdtmhs()  throws SQLException{
        Connection cnn = koneksi();
    
        DTM.getDataVector().removeAllElements(); // Kosongkan isi tabel dulu
        DTM.fireTableDataChanged();

        if( !cnn.isClosed()){
            PreparedStatement PS = cnn.prepareStatement("SELECT * FROM buku;");
            ResultSet RS = PS.executeQuery();
            while( RS.next() ){
                Object[] databuku = new Object[6];
                    databuku[0] = RS.getString("id_buku");
                    databuku[1] = RS.getString("judul");
                    databuku[2] = RS.getString("penulis");
                    databuku[3] = RS.getString("genre");
                    databuku[4] = RS.getString("tahun_terbit");
                    databuku[5] = RS.getString("status_baca");
                    
                    DTM.addRow(databuku);
            }
        }
    }
    
    
    private void clearform() {
    txtID.setText("");
    txtJUDUL.setText("");
    txtPENULIS.setText("");
    txtGENRE.setText("");
    txtTAHUN.setText("");
    txtSTATUS.setText("");
    }
    
    private void storeData() throws SQLException {
       Connection cnn = koneksi();
    String id_buku = txtID.getText().trim();
    String judul = txtJUDUL.getText().trim();
    String penulis = txtPENULIS.getText().trim();
    String genre = txtGENRE.getText().trim();
    String tahun_input = txtTAHUN.getText().trim();
    String status_baca = String.valueOf(cbSTATUS.getSelectedItem());

    if (id_buku.isEmpty() || judul.isEmpty() || penulis.isEmpty() || genre.isEmpty() || tahun_input.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Validasi Gagal", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int tahun_terbit;
    try {
        tahun_terbit = Integer.parseInt(tahun_input);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Tahun terbit harus berupa angka!", "Input Salah", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (!cnn.isClosed()) {
        PreparedStatement PS = cnn.prepareStatement("INSERT INTO buku (id_buku, judul, penulis, genre, tahun_terbit, status_baca) VALUES (?, ?, ?, ?, ?, ?);");
        PS.setString(1, id_buku);
        PS.setString(2, judul);
        PS.setString(3, penulis);
        PS.setString(4, genre);
        PS.setInt(5, tahun_terbit);
        PS.setString(6, status_baca);
        PS.executeUpdate();
        cnn.close();
    }
    }

    private void updateData()throws SQLException {
        Connection cnn = koneksi();
    String id_buku = txtID.getText().trim();
    String judul = txtJUDUL.getText().trim();
    String penulis = txtPENULIS.getText().trim();
    String genre = txtGENRE.getText().trim();
    String tahun_input = txtTAHUN.getText().trim();
    String status_baca = String.valueOf(cbSTATUS.getSelectedItem());

    if (id_buku.isEmpty() || judul.isEmpty() || penulis.isEmpty() || genre.isEmpty() || tahun_input.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Validasi Gagal", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int tahun_terbit;
    try {
        tahun_terbit = Integer.parseInt(tahun_input);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Tahun terbit harus berupa angka!", "Input Salah", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (!cnn.isClosed()) {
        PreparedStatement PS = cnn.prepareStatement(
            "UPDATE buku SET judul=?, penulis=?, genre=?, tahun_terbit=?, status_baca=? WHERE id_buku=?;"
        );
        PS.setString(1, judul);         
        PS.setString(2, penulis);
        PS.setString(3, genre);
        PS.setInt(4, tahun_terbit);     // ✅ ubah ke integer!
        PS.setString(5, status_baca);
        PS.setString(6, id_buku);       // ✅ terakhir adalah id_buku untuk WHERE

        PS.executeUpdate();             // ← JANGAN LUPA INI!
        cnn.close();    
    }
    }

    private void destroyData() throws SQLException {
        Connection cnn = koneksi();
        String id_buku = txtID.getText();
       
       
       if(!cnn.isClosed()){
           PreparedStatement PS = cnn.prepareStatement("DELETE FROM buku WHERE id_buku=?;");
           PS.setString(1, id_buku);
           PS.executeUpdate();
           cnn.close();
       }
       
    }
    }

